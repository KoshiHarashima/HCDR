from sklearn.impute import KNNImputer
from sklearn.preprocessing import LabelEncoder

def fill_occupation_type_knn(df):
  # Select relevant features for KNN
  features = ['NAME_EDUCATION_TYPE_map', 'EXT_SOURCE_2', 'AMT_INCOME_TOTAL', 'OCCUPATION_TYPE']
  df_knn = df[features].copy()

  # Create a LabelEncoder for 'OCCUPATION_TYPE'
  le = LabelEncoder()
  df_knn['OCCUPATION_TYPE_encoded'] = le.fit_transform(df_knn['OCCUPATION_TYPE'])

  # Use the encoded column for imputation
  features_for_knn = ['NAME_EDUCATION_TYPE_map', 'EXT_SOURCE_2', 'AMT_INCOME_TOTAL', 'OCCUPATION_TYPE_encoded']

  # Create a KNN Imputer
  imputer = KNNImputer(n_neighbors=30)  # Adjust n_neighbors as needed

  # Fit and transform the data using the encoded column
  df_knn[features_for_knn] = imputer.fit_transform(df_knn[features_for_knn])

  # Replace the original column with the imputed values (inverse transform to get original labels)
  df['OCCUPATION_TYPE'] = le.inverse_transform(df_knn['OCCUPATION_TYPE_encoded'].astype(int))

  return df
df = fill_occupation_type_knn(df)

#28193 left
